// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Put back the hardcoded values since environment variables aren't set up
const SUPABASE_URL = "https://uvqdugteqgjnwtrufrhe.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV2cWR1Z3RlcWdqbnd0cnVmcmhlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4MTI5NTUsImV4cCI6MjA1NjM4ODk1NX0.GsMrNp2gcypqUAXbfCs_GM344bA-Iwv25ZUVIatiJEw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
  },
  // Add global error handler with proper error throwing
  global: {
    fetch: (input: RequestInfo | URL, init?: RequestInit) => {
      return fetch(input, init).catch((error) => {
        console.error('Supabase fetch error:', error);
        throw error; // This is critical - must rethrow error
      });
    },
  },
});

// Additional helper to check Supabase connection
export const checkSupabaseConnection = async () => {
  try {
    const { data, error } = await supabase.from('profiles').select('id').limit(1);
    
    if (error) {
      console.error('Supabase connection check failed:', error);
      return false;
    }
    
    return true;
  } catch (e) {
    console.error('Supabase connection check exception:', e);
    return false;
  }
};